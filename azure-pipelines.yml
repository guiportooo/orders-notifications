trigger:
- master

variables:
  buildConfiguration: 'Release'

  azureSubscription: 'Visual Studio Professional (7ed53679-1661-4c8b-b7b9-08b51fd7073f)'

  vmImageName: 'ubuntu-latest'

  workingDirectory: '$(System.DefaultWorkingDirectory)/OrdersNotifications/OrdersNotifications.Api'

stages:
- stage: Build
  displayName: Build stage

  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)

    steps:
    - task: DotNetCoreCLI@2 
      displayName: 'dotnet build'
      inputs:
        command: build
        projects: |
          $(workingDirectory)/*.csproj
        arguments: '--configuration $(buildConfiguration)'

    - task: DotNetCoreCLI@2
      displayName: 'dotnet publish'
      inputs:
        command: publish
        publishWebProjects: false
        projects: |
          $(workingDirectory)/*.csproj
        arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
        zipAfterPublish: true

    - task: PublishBuildArtifacts@1
      displayName: 'publish artifacts'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'


- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()

  jobs:
  - job: Deploy
    displayName: Deploy
    pool:
      vmImage: $(vmImageName)

    steps:
    - task: DownloadBuildArtifacts@0
      displayName: 'download artifacts'
      inputs:
        buildType: 'current'
        downloadType: 'specific'
        downloadPath: '$(System.ArtifactsDirectory)'
        artifactName: 'drop'

    - task: AzureRmWebAppDeployment@4
      displayName: 'api deploy'
      inputs:
        ConnectionType: 'AzureRM'
        azureSubscription: '$(azureSubscription)'
        appType: 'apiApp'
        WebAppName: 'orders-notifications-api'
        packageForLinux: '$(System.ArtifactsDirectory)/drop/*.zip'
    
